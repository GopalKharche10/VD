# CDMA Basic Function Simulation
import numpy as np

# Define orthogonal codes
c1 = [1, 1, 1, 1]
c2 = [1, -1, 1, -1]
c3 = [1, 1, -1, -1]
c4 = [1, -1, -1, 1]

# Input data bits
print("Enter the data bits (1 or -1):")
d1 = int(input("Enter D1: "))
d2 = int(input("Enter D2: "))
d3 = int(input("Enter D3: "))
d4 = int(input("Enter D4: "))

# Multiply data bits with their respective codes
r1 = np.multiply(c1, d1)
r2 = np.multiply(c2, d2)
r3 = np.multiply(c3, d3)
r4 = np.multiply(c4, d4)

# Summing up the signals to form resultant channel
resultant_channel = r1 + r2 + r3 + r4
print("Resultant Channel:", resultant_channel)

# Receiver side
channel = int(input("Enter the station to listen for (C1=1, C2=2, C3=3, C4=4): "))
if channel == 1:
    rc = c1
elif channel == 2:
    rc = c2
elif channel == 3:
    rc = c3
elif channel == 4:
    rc = c4
else:
    print("Invalid channel selected!")
    rc = [0, 0, 0, 0]

# Inner product calculation
inner_product = np.multiply(resultant_channel, rc)
print("Inner Product:", inner_product)

# Summation and data recovery
res1 = sum(inner_product)
data = res1 / len(inner_product)
print("Recovered Data bit sent:", data)